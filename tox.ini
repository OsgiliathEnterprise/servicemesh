[tox]
requires =
    tox>4
    virtualenv>20.2
labels =
    testenv = py311
env_list =
    pipdep
    dependency
    lint
    create
    create-monorepo
    converge
    converge-monorepo
    test-exec
    test-exec-monorepo
    verify
    verify-monorepo
    idempotence
    idempotence-monorepo
    destroy
    package

[testenv:pipdep]
allowlist_externals=rm
deps =
    -r requirements-poetry.txt
commands =
    poetry lock
    rm -rf requirements.txt
    poetry export -f requirements.txt --without-hashes -o requirements.txt
    rm -rf requirements-dev.txt
    poetry export -f requirements.txt --with dev --without-hashes -o requirements-dev.txt

[testenv:package]
deps =
    -r requirements-poetry.txt
commands =
    poetry build

[testenv:dependency]
deps =
    -r requirements-dev.txt
commands = molecule dependency
[testenv:lint]
deps =
    -r requirements-dev.txt
commands =
    yamllint .
    flake8
    ansible-lint
[common-ansible-path]
setenv =
    ANSIBLE_ROLES_PATH={toxinidir}/../community:{toxinidir}/../oss:{toxinidir}/..
    ANSIBLE_COLLECTIONS_PATH={toxinidir}/../community-collections
commands =
    mkdir -p {toxinidir}/../community
    mkdir -p {toxinidir}/../oss
    mkdir -p {toxinidir}/../community-collections
[testenv:create]
allowlist_externals=mkdir
setenv =
    {[common-ansible-path]setenv}
deps =
    -r requirements-dev.txt
commands =
    {[common-ansible-path]commands}
    molecule create {posargs}
[testenv:create-monorepo]
allowlist_externals=mkdir
setenv =
    {[common-ansible-path]setenv}
    REQUIREMENTS_PATH={toxinidir}/requirements-monorepo.yml
deps =
    -r requirements-dev.txt
commands =
    {[common-ansible-path]commands}
    molecule create {posargs}
[testenv:converge-monorepo]
allowlist_externals=mkdir
setenv =
    {[common-ansible-path]setenv}
    REQUIREMENTS_PATH={toxinidir}/requirements-monorepo.yml
deps =
    -r requirements-dev.txt
commands =
    {[common-ansible-path]commands}
    molecule converge {posargs}
[testenv:converge]
allowlist_externals=mkdir
setenv =
    {[common-ansible-path]setenv}
deps =
    -r requirements-dev.txt
commands =
    {[common-ansible-path]commands}
    molecule converge {posargs}
[testenv:test-exec-monorepo]
allowlist_externals=mkdir
setenv =
    {[common-ansible-path]setenv}
    REQUIREMENTS_PATH={toxinidir}/requirements-monorepo.yml
deps =
    -r requirements-dev.txt
commands =
    {[common-ansible-path]commands}
    molecule test {posargs}
[testenv:test-exec]
allowlist_externals=mkdir
setenv =
    {[common-ansible-path]setenv}
deps =
    -r requirements-dev.txt
commands =
    {[common-ansible-path]commands}
    molecule test {posargs}
[testenv:verify-monorepo]
allowlist_externals=mkdir
setenv =
    {[common-ansible-path]setenv}
    REQUIREMENTS_PATH={toxinidir}/requirements-monorepo.yml
deps =
    -r requirements-dev.txt
commands =
    {[common-ansible-path]commands}
    molecule verify {posargs}
[testenv:verify]
allowlist_externals=mkdir
setenv =
    {[common-ansible-path]setenv}
deps =
    -r requirements-dev.txt
commands =
    {[common-ansible-path]commands}
    molecule verify {posargs}
[testenv:idempotence-monorepo]
allowlist_externals=mkdir
setenv =
    {[common-ansible-path]setenv}
    REQUIREMENTS_PATH={toxinidir}/requirements-monorepo.yml
deps =
    -r requirements-dev.txt
commands =
    {[common-ansible-path]commands}
    molecule idempotence {posargs}
[testenv:idempotence]
allowlist_externals=mkdir
setenv =
    {[common-ansible-path]setenv}
deps =
    -r requirements-dev.txt
commands =
    {[common-ansible-path]commands}
    molecule idempotence {posargs}
[testenv:destroy]
setenv =
    DEPENDENCY_ENABLED=False
deps =
    -r requirements-dev.txt
commands =
    molecule destroy {posargs}
