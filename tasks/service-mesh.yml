---

- name: Service-mesh | create istio-system namespace
  ansible.builtin.include_role:
    name: tcharl.ansible_orchestration_cli
  vars:
    ansible_become: true
    standalone_role: False
    kube_sysadmin_client_cert_path: "{{ kube_credential_folder }}/kubeadm.crt"
    kube_sysadmin_client_key_path: "{{ kube_credential_folder }}/kubeadm.pem"
    kube_cacert_path: "{{ kubernetes_certificates_path }}ca.crt"
    descriptor_sets:
      - url: https://github.com/OsgiliathEnterprise/orchestrator-system-configuration.git
        kind: git
        branch: master
        descriptors:
          - path: namespaces/istio-system-ns.yml
    helm_install: Yes

- name: Service-mesh | create remote temporary directory
  ansible.builtin.tempfile:
    state: directory
    suffix: istio
  register: istio_temp_remote_directory

- name: Service-mesh | download the istio release
  ansible.builtin.get_url:
    url: "https://istio.io/downloadIstio"
    dest: "{{ istio_temp_remote_directory.path }}/istio-installer.sh"
    mode: '0740'

- name: Service-mesh | download the istio release
  ansible.builtin.command: "{{ istio_temp_remote_directory.path }}/istio-installer.sh"
  changed_when: False # to do test
  args:
    chdir: "{{ istio_temp_remote_directory.path }}"

- name: Service-mesh | install istio-base
  kubernetes.core.helm:
    name: istio-base
    chart_ref: "{{ istio_temp_remote_directory.path }}/istio-{{ istio_version }}/manifests/charts/base"
    release_namespace: istio-system
    create_namespace: true
    kubeconfig: "{{ kube_config_path }}"
  register: result
  until: result is succeeded
  retries: 5
  delay: 10
  become: Yes

- name: Service-mesh | install istio-discovery
  kubernetes.core.helm:
    name: istiod
    chart_ref: "{{ istio_temp_remote_directory.path }}/istio-{{ istio_version }}/manifests/charts/istio-control/istio-discovery"
    release_namespace: istio-system
    create_namespace: true
    kubeconfig: "{{ kube_config_path }}"
  register: result
  until: result is succeeded
  retries: 5
  delay: 10
  become: Yes

- name: Service-mesh | install istio-ingress
  kubernetes.core.helm:
    name: istio-ingress
    chart_ref: "{{ istio_temp_remote_directory.path }}/istio-{{ istio_version }}/manifests/charts/gateways/istio-ingress"
    release_namespace: istio-system
    create_namespace: true
    kubeconfig: "{{ kube_config_path }}"
  register: result
  until: result is succeeded
  retries: 5
  delay: 10
  become: Yes

- name: Service-mesh | install istio-egress
  kubernetes.core.helm:
    name: istio-egress
    chart_ref: "{{ istio_temp_remote_directory.path }}/istio-{{ istio_version }}/manifests/charts/gateways/istio-egress"
    release_namespace: istio-system
    create_namespace: true
    kubeconfig: "{{ kube_config_path }}"
  register: result
  until: result is succeeded
  retries: 5
  delay: 10
  become: Yes
