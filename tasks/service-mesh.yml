---

- name: Service-mesh | patch calico configuration to apply application-level security
  ansible.builtin.command: >
    kubectl exec -ti -n kube-system calicoctl -- /calicoctl \
    patch FelixConfiguration default --patch \
    '{"spec": {"policySyncPathPrefix": "/var/run/nodeagent"}}'
  become: true
  register: result
  until: result is succeeded
  retries: 5
  delay: 10
  when:
    - kube_masters_group in group_names

- name: Service-mesh | create temp directory to host calico mtls policies
  changed_when: false
  ansible.builtin.tempfile:
    state: directory
    suffix: cni
  register: mtls_policies_temp_directory

- name: Service-mesh | create istio-system namespace
  ansible.builtin.include_role:
    name: tcharl.ansible_orchestration_cli
  vars:
    ansible_become: true
    standalone_role: False
    kube_sysadmin_client_cert_path: "{{ kube_credential_folder }}/kubeadm.crt"
    kube_sysadmin_client_key_path: "{{ kube_credential_folder }}/kubeadm.pem"
    kube_cacert_path: "{{ kubernetes_certificates_path }}ca.crt"
    descriptor_sets:
      - url: https://github.com/OsgiliathEnterprise/orchestrator-system-configuration.git
        kind: git
        branch: master
        descriptors:
          - path: namespaces/istio-system-ns.yml
    helm_install: Yes

- name: Service-mesh | download the istio release
  ansible.builtin.get_url:
    url: "https://istio.io/downloadIstio"
    dest: "{{ mtls_policies_temp_directory.path }}/istio-installer.sh"
    mode: '0740'

- name: Service-mesh | download the istio release
  ansible.builtin.command: "{{ mtls_policies_temp_directory.path }}/istio-installer.sh"
  changed_when: False # to do test
  args:
    chdir: "{{ mtls_policies_temp_directory.path }}"

- name: Service-mesh | install istio-base
  kubernetes.core.helm:
    name: istio-base
    chart_ref: "{{ mtls_policies_temp_directory.path }}/istio-{{ istio_version }}/manifests/charts/base"
    release_namespace: istio-system
    create_namespace: true
    kubeconfig: "{{ kube_config_path }}"
  register: result
  until: result is succeeded
  retries: 5
  delay: 10
  become: Yes

- name: Service-mesh | install istio-discovery
  kubernetes.core.helm:
    name: istiod
    chart_ref: "{{ mtls_policies_temp_directory.path }}/istio-{{ istio_version }}/manifests/charts/istio-control/istio-discovery"
    release_namespace: istio-system
    create_namespace: true
    kubeconfig: "{{ kube_config_path }}"
  register: result
  until: result is succeeded
  retries: 5
  delay: 10
  become: Yes

- name: Service-mesh | install istio-ingress
  kubernetes.core.helm:
    name: istio-ingress
    chart_ref: "{{ mtls_policies_temp_directory.path }}/istio-{{ istio_version }}/manifests/charts/gateways/istio-ingress"
    release_namespace: istio-system
    create_namespace: true
    kubeconfig: "{{ kube_config_path }}"
  register: result
  until: result is succeeded
  retries: 5
  delay: 10
  become: Yes

- name: Service-mesh | install istio-egress
  kubernetes.core.helm:
    name: istio-egress
    chart_ref: "{{ mtls_policies_temp_directory.path }}/istio-{{ istio_version }}/manifests/charts/gateways/istio-egress"
    release_namespace: istio-system
    create_namespace: true
    kubeconfig: "{{ kube_config_path }}"
  register: result
  until: result is succeeded
  retries: 5
  delay: 10
  become: Yes

- name: Service-mesh | copy strict mtls policies
  ansible.builtin.copy:
    src: istio-mtls-stricts.yml
    dest: "{{ mtls_policies_temp_directory.path }}/istio-mtls-stricts.yml"
    mode: '0600'
  become: true
  when:
    - kube_masters_group in group_names

- name: Service-mesh | apply istio policies
  ansible.builtin.command: >
    kubectl apply -f {{ mtls_policies_temp_directory.path }}/istio-mtls-stricts.yml
  register: result
  until: result is succeeded
  retries: 5
  delay: 10
  become: true
  when:
    - kube_masters_group in group_names

- name: Service-mesh | Download the istio injector calico patch
  ansible.builtin.get_url:
    url: "https://raw.githubusercontent.com/projectcalico/calico/{{ calico_version }}/manifests/alp/istio-inject-configmap-1.15.yaml"
    dest: "{{ mtls_policies_temp_directory.path }}/istio-inject-configmap.yaml"
    mode: '0644'
    force: true
  become: True

- name: Service-mesh | patch the injector
  ansible.builtin.command: >
    kubectl patch configmap istio-sidecar-injector -n istio-system --patch "$(cat {{ mtls_policies_temp_directory.path }}/istio-inject-configmap.yaml)"
  register: result
  until: result is succeeded
  retries: 5
  delay: 10
  become: True

- name: Service-mesh | apply authorization services to the mesh
  ansible.builtin.command: >
    kubectl apply -f https://raw.githubusercontent.com/projectcalico/calico/{{ calico_version }}/manifests/alp/istio-app-layer-policy-envoy-v3.yaml
  register: result
  until: result is succeeded
  retries: 5
  delay: 10
  become: True
